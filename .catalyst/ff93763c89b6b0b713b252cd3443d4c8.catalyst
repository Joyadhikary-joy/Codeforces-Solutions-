{"title":{"en":"F. Equidistant Vertices","ru":"F. Равноудалённые вершины"},"contestId":"1551","problemIndex":"F","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>A tree is an undirected connected graph without cycles.</p><p>You are given a tree of $$$n$$$ vertices. Find the number of ways to choose exactly $$$k$$$ vertices in this tree (i. e. a $$$k$$$-element subset of vertices) so that all pairwise distances between the selected vertices are equal (in other words, there exists an integer $$$c$$$ such that for all $$$u, v$$$ ($$$u \\ne v$$$, $$$u, v$$$ are in selected vertices) $$$d_{u,v}=c$$$, where $$$d_{u,v}$$$ is the distance from $$$u$$$ to $$$v$$$).</p><p>Since the answer may be very large, you need to output it modulo $$$10^9 + 7$$$.</p>","ru":"<p>Дерево — это неориентированный связный граф, в котором отсутствуют циклы.</p><p>Задано дерево из $$$n$$$ вершин. Необходимо посчитать количество способов выбрать в этом дереве ровно $$$k$$$ вершин (т.е. $$$k$$$-элементное подмножество вершин), так чтобы все попарные расстояния между выбранными вершинами были равны. Иными словами, чтобы существовало такое число $$$c$$$, что для всех $$$u, v$$$ ($$$u \\ne v$$$, $$$u, v$$$ — выбранные вершины) было верно $$$d_{u,v}=c$$$, где $$$d_{u,v}$$$ — расстояние от $$$u$$$ до $$$v$$$.</p><p>Поскольку ответ может быть очень большим, необходимо вывести его по модулю $$$10^9 + 7$$$.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10$$$) — the number of test cases. Then $$$t$$$ test cases follow.</p><p>Each test case is preceded by an empty line.</p><p>Each test case consists of several lines. The first line of the test case contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le k \\le n \\le 100$$$) — the number of vertices in the tree and the number of vertices to be selected, respectively. Then $$$n - 1$$$ lines follow, each of them contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\neq v$$$) which describe a pair of vertices connected by an edge. It is guaranteed that the given graph is a tree and has no loops or multiple edges.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке записано одно целое число $$$t$$$ ($$$1 \\le t \\le 10$$$) — количество наборов входных данных. Далее следуют $$$t$$$ наборов входных данных.</p><p>Перед каждым набором входных данных расположена пустая строка.</p><p>Каждый набор данных состоит из нескольких строк. Первая строка набора данных содержит два целых числа $$$n$$$ и $$$k$$$ ($$$2 \\le k \\le n \\le 100$$$) — количество вершин в дереве и количество выбираемых вершин соответственно. Далее идут $$$n - 1$$$ строк, каждая содержит два целых числа $$$u$$$ и $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\neq v$$$) — две вершины, которые соединены ребром. Гарантируется, что заданный граф является деревом, отсутствуют петли и кратные рёбра.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case output in a separate line a single integer — the number of ways to select exactly $$$k$$$ vertices so that for all pairs of selected vertices the distances between the vertices in the pairs are equal, modulo $$$10^9 + 7$$$ (in other words, print the remainder when divided by $$$1000000007$$$).</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите в отдельной строке одно целое число — количество способов выбрать в дереве ровно $$$k$$$ вершин, так чтобы для любых двух пар вершин расстояние между вершинами в паре было одинаковым, по модулю $$$10^9 + 7$$$ (иными словами, выведите остаток при делении на $$$1000000007$$$).</p>"},"noteHtml":{"en":null,"ru":null},"sampleTestcases":[{"id":1651718757170,"input":"3\n\n4 2\n1 2\n2 3\n2 4\n\n3 3\n1 2\n2 3\n\n5 3\n1 2\n2 3\n2 4\n4 5\n","output":"6\n0\n1\n"}],"submitUrl":"https://codeforces.com/contest/1551/submit","language":"c++","isPartOfContest":true}