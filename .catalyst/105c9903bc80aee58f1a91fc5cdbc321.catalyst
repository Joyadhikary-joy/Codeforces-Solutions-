{"title":{"en":"E. Fixed Points","ru":"E. Неподвижные точки"},"contestId":"1551","problemIndex":"E","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Consider a sequence of integers $$$a_1, a_2, \\ldots, a_n$$$. In one move, you can select any element of the sequence and delete it. After an element is deleted, all elements to the right are shifted to the left by $$$1$$$ position, so there are no empty spaces in the sequence. So after you make a move, the sequence's length decreases by $$$1$$$. The indices of the elements after the move are recalculated.</p><p>E. g. let the sequence be $$$a=[3, 2, 2, 1, 5]$$$. Let's select the element $$$a_3=2$$$ in a move. Then after the move the sequence will be equal to $$$a=[3, 2, 1, 5]$$$, so the $$$3$$$-rd element of the new sequence will be $$$a_3=1$$$ and the $$$4$$$-th element will be $$$a_4=5$$$.</p><p>You are given a sequence $$$a_1, a_2, \\ldots, a_n$$$ and a number $$$k$$$. You need to find the minimum number of moves you have to make so that in the resulting sequence there will be <span class=\"tex-font-style-bf\">at least</span> $$$k$$$ elements that are equal to their indices, i. e. the resulting sequence $$$b_1, b_2, \\ldots, b_m$$$ will contain at least $$$k$$$ indices $$$i$$$ such that $$$b_i = i$$$.</p>","ru":"<p>Задана последовательность целых чисел $$$a_1, a_2, \\ldots, a_n$$$. За один ход можно выбрать любой элемент последовательности и удалить его. Все элементы справа от удаленного сдвигаются на $$$1$$$ позицию влево, чтобы в последовательности не было пустых мест. Таким образом, за один ход длина последовательности всегда сокращается на $$$1$$$. Индексы элементов после хода пересчитываются.</p><p>Например, пусть последовательность имеет вид $$$a=[3, 2, 2, 1, 5]$$$. Допустим во время хода был выбран элемент $$$a_3=2$$$. Тогда после хода последовательность будет равна $$$a=[3, 2, 1, 5]$$$, причём теперь её $$$3$$$-м элементом будет считаться $$$a_3=1$$$, а $$$4$$$-м будет $$$a_4=5$$$.</p><p>Вам дана последовательность $$$a_1, a_2, \\ldots, a_n$$$ и число $$$k$$$. Требуется найти минимальное количество ходов, которое нужно совершить, чтобы в последовательности <span class=\"tex-font-style-bf\">не менее</span> $$$k$$$ элементов были равны своим индексам, т. е. в полученной последовательности $$$b_1, b_2, \\ldots, b_m$$$ существовало не менее $$$k$$$ индексов $$$i$$$ таких, что $$$b_i = i$$$.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. Then $$$t$$$ test cases follow.</p><p>Each test case consists of two consecutive lines. The first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 2000$$$). The second line contains a sequence of integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$). The numbers in the sequence are not necessarily different.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2000$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке записано одно целое число $$$t$$$ ($$$1 \\le t \\le 100$$$) — количество наборов входных данных. Далее следуют $$$t$$$ наборов входных данных.</p><p>Каждый набор данных состоит из двух подряд идущих строк. Первая строка содержит два целых числа $$$n$$$ и $$$k$$$ ($$$1 \\le k \\le n \\le 2000$$$). Вторая строка содержит последовательность целых чисел $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$). Числа в последовательности не обязательно различны.</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превышает $$$2000$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case output in a single line:</p><ul> <li> $$$-1$$$ if there's no desired move sequence; </li><li> otherwise, the integer $$$x$$$ ($$$0 \\le x \\le n$$$) — the minimum number of the moves to be made so that the resulting sequence will contain at least $$$k$$$ elements that are equal to their indices. </li></ul>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите в отдельной строке:</p><ul> <li> $$$-1$$$, если не существует искомой последовательности ходов; </li><li> в противном случае целое число $$$x$$$ ($$$0 \\le x \\le n$$$) — минимальное количество ходов, которое требуется, для того чтобы не менее $$$k$$$ элементов последовательности стали равны своим индексам. </li></ul>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case the sequence doesn't satisfy the desired condition, but it can be provided by deleting the first element, hence the sequence will be $$$[1, 2, 3, 4, 5, 6]$$$ and $$$6$$$ elements will be equal to their indices.</p><p>In the second test case there are two ways to get the desired result in $$$2$$$ moves: the first one is to delete the $$$1$$$-st and the $$$3$$$-rd elements so that the sequence will be $$$[1, 2, 3]$$$ and have $$$3$$$ elements equal to their indices; the second way is to delete the $$$2$$$-nd and the $$$3$$$-rd elements to get the sequence $$$[5, 2, 3]$$$ with $$$2$$$ desired elements.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе входных данных последовательность изначально не удовлетворяет виду, к которому её необходимо привести, однако, удалив первый элемент последовательности, можно добиться того, что последовательность примет вид $$$[1, 2, 3, 4, 5, 6]$$$, т. е. $$$6$$$ элементов будут равны своим индексам.</p><p>Во втором тестовом примере есть два способа достичь желаемого результата за $$$2$$$ хода: удалить $$$1$$$-й и $$$3$$$-й элементы, при этом последовательность будет иметь вид $$$[1, 2, 3]$$$, в которой будет $$$3$$$ равных своим индексам элемента; второй способ — удалить $$$2$$$-й и $$$3$$$-й элементы, тогда получится последовательность $$$[5, 2, 3]$$$, в которой будет $$$2$$$ искомых элемента.</p>"},"sampleTestcases":[{"id":1651718754625,"input":"4\n7 6\n1 1 2 3 4 5 6\n5 2\n5 1 3 2 3\n5 2\n5 5 5 5 4\n8 4\n1 2 3 3 2 2 5 5\n","output":"1\n2\n-1\n2\n"}],"submitUrl":"https://codeforces.com/contest/1551/submit","language":"c++","isPartOfContest":true}