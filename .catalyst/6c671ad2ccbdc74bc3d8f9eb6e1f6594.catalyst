<<<<<<< HEAD
{"title":"C. Frog Jumps","contestId":"1324","problemIndex":"C","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There is a frog staying to the left of the string $$$s = s_1 s_2 \\ldots s_n$$$ consisting of $$$n$$$ characters (to be more precise, the frog initially stays at the cell $$$0$$$). Each character of $$$s$$$ is either &apos;<span class=\"tex-font-style-tt\">L</span>&apos; or &apos;<span class=\"tex-font-style-tt\">R</span>&apos;. It means that if the frog is staying at the $$$i$$$-th cell and the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">L</span>&apos;, the frog can jump only to the left. If the frog is staying at the $$$i$$$-th cell and the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">R</span>&apos;, the frog can jump only to the right. <span class=\"tex-font-style-bf\">The frog can jump only to the right from the cell $$$0$$$</span>.</p><p><span class=\"tex-font-style-bf\">Note that the frog can jump into the same cell twice and can perform as many jumps as it needs</span>.</p><p>The frog wants to reach the $$$n+1$$$-th cell. The frog chooses some <span class=\"tex-font-style-bf\">positive integer</span> value $$$d$$$ <span class=\"tex-font-style-bf\">before the first jump</span> (and cannot change it later) and jumps by no more than $$$d$$$ cells at once. I.e. if the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">L</span>&apos; then the frog can jump to any cell in a range $$$[max(0, i - d); i - 1]$$$, and if the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">R</span>&apos; then the frog can jump to any cell in a range $$$[i + 1; min(n + 1; i + d)]$$$.</p><p>The frog doesn&apos;t want to jump far, so your task is to find the minimum possible value of $$$d$$$ such that the frog can reach the cell $$$n+1$$$ from the cell $$$0$$$ if it can jump by no more than $$$d$$$ cells at once. <span class=\"tex-font-style-bf\">It is guaranteed that it is always possible to reach $$$n+1$$$ from $$$0$$$</span>.</p><p>You have to answer $$$t$$$ independent test cases.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) &#x2014; the number of test cases.</p><p>The next $$$t$$$ lines describe test cases. The $$$i$$$-th test case is described as a string $$$s$$$ consisting of at least $$$1$$$ and at most $$$2 \\cdot 10^5$$$ characters &apos;<span class=\"tex-font-style-tt\">L</span>&apos; and &apos;<span class=\"tex-font-style-tt\">R</span>&apos;.</p><p>It is guaranteed that the sum of lengths of strings over all test cases does not exceed $$$2 \\cdot 10^5$$$ ($$$\\sum |s| \\le 2 \\cdot 10^5$$$).</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, print the answer &#x2014; the minimum possible value of $$$d$$$ such that the frog can reach the cell $$$n+1$$$ from the cell $$$0$$$ if it jumps by no more than $$$d$$$ at once.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>The picture describing the first test case of the example and one of the possible answers:</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/de84e2ea205b39d12a73b422b7f6b0229de451ba.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"></p><p>In the second test case of the example, the frog can only jump directly from $$$0$$$ to $$$n+1$$$.</p><p>In the third test case of the example, the frog can choose $$$d=3$$$, jump to the cell $$$3$$$ from the cell $$$0$$$ and then to the cell $$$4$$$ from the cell $$$3$$$.</p><p>In the fourth test case of the example, the frog can choose $$$d=1$$$ and jump $$$5$$$ times to the right.</p><p>In the fifth test case of the example, the frog can only jump directly from $$$0$$$ to $$$n+1$$$.</p><p>In the sixth test case of the example, the frog can choose $$$d=1$$$ and jump $$$2$$$ times to the right.</p>","sampleTestcases":[{"id":1630812414583,"input":"6\nLRLRRLL\nL\nLLR\nRRRR\nLLLLLL\nR\n","output":"3\n2\n3\n1\n7\n1\n"}],"submitUrl":"https://codeforces.com/contest/1324/submit","language":"c++"}
=======
{"title":"C. Frog Jumps","contestId":"1324","problemIndex":"C","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There is a frog staying to the left of the string $$$s = s_1 s_2 \\ldots s_n$$$ consisting of $$$n$$$ characters (to be more precise, the frog initially stays at the cell $$$0$$$). Each character of $$$s$$$ is either &apos;<span class=\"tex-font-style-tt\">L</span>&apos; or &apos;<span class=\"tex-font-style-tt\">R</span>&apos;. It means that if the frog is staying at the $$$i$$$-th cell and the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">L</span>&apos;, the frog can jump only to the left. If the frog is staying at the $$$i$$$-th cell and the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">R</span>&apos;, the frog can jump only to the right. <span class=\"tex-font-style-bf\">The frog can jump only to the right from the cell $$$0$$$</span>.</p><p><span class=\"tex-font-style-bf\">Note that the frog can jump into the same cell twice and can perform as many jumps as it needs</span>.</p><p>The frog wants to reach the $$$n+1$$$-th cell. The frog chooses some <span class=\"tex-font-style-bf\">positive integer</span> value $$$d$$$ <span class=\"tex-font-style-bf\">before the first jump</span> (and cannot change it later) and jumps by no more than $$$d$$$ cells at once. I.e. if the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">L</span>&apos; then the frog can jump to any cell in a range $$$[max(0, i - d); i - 1]$$$, and if the $$$i$$$-th character is &apos;<span class=\"tex-font-style-tt\">R</span>&apos; then the frog can jump to any cell in a range $$$[i + 1; min(n + 1; i + d)]$$$.</p><p>The frog doesn&apos;t want to jump far, so your task is to find the minimum possible value of $$$d$$$ such that the frog can reach the cell $$$n+1$$$ from the cell $$$0$$$ if it can jump by no more than $$$d$$$ cells at once. <span class=\"tex-font-style-bf\">It is guaranteed that it is always possible to reach $$$n+1$$$ from $$$0$$$</span>.</p><p>You have to answer $$$t$$$ independent test cases.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) &#x2014; the number of test cases.</p><p>The next $$$t$$$ lines describe test cases. The $$$i$$$-th test case is described as a string $$$s$$$ consisting of at least $$$1$$$ and at most $$$2 \\cdot 10^5$$$ characters &apos;<span class=\"tex-font-style-tt\">L</span>&apos; and &apos;<span class=\"tex-font-style-tt\">R</span>&apos;.</p><p>It is guaranteed that the sum of lengths of strings over all test cases does not exceed $$$2 \\cdot 10^5$$$ ($$$\\sum |s| \\le 2 \\cdot 10^5$$$).</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, print the answer &#x2014; the minimum possible value of $$$d$$$ such that the frog can reach the cell $$$n+1$$$ from the cell $$$0$$$ if it jumps by no more than $$$d$$$ at once.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>The picture describing the first test case of the example and one of the possible answers:</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/de84e2ea205b39d12a73b422b7f6b0229de451ba.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"></p><p>In the second test case of the example, the frog can only jump directly from $$$0$$$ to $$$n+1$$$.</p><p>In the third test case of the example, the frog can choose $$$d=3$$$, jump to the cell $$$3$$$ from the cell $$$0$$$ and then to the cell $$$4$$$ from the cell $$$3$$$.</p><p>In the fourth test case of the example, the frog can choose $$$d=1$$$ and jump $$$5$$$ times to the right.</p><p>In the fifth test case of the example, the frog can only jump directly from $$$0$$$ to $$$n+1$$$.</p><p>In the sixth test case of the example, the frog can choose $$$d=1$$$ and jump $$$2$$$ times to the right.</p>","sampleTestcases":[{"id":1630768512972,"input":"6\nLRLRRLL\nL\nLLR\nRRRR\nLLLLLL\nR\n","output":"3\n2\n3\n1\n7\n1\n","result":{"id":1630768512972,"stdout":"3\n2\n3\n1\n7\n1\n","stderr":"","exitcode":0,"signal":null,"time":2,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}
>>>>>>> 8th time
