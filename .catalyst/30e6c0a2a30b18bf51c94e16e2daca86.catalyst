{"title":{"en":"E. Binary Deque","ru":"E. Двоичный дек"},"contestId":"1692","problemIndex":"E","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Slavic has an array of length $$$n$$$ consisting only of zeroes and ones. In one operation, he removes either the first or the last element of the array. </p><p>What is the minimum number of operations Slavic has to perform such that the total sum of the array is equal to $$$s$$$ after performing all the operations? In case the sum $$$s$$$ can't be obtained after any amount of operations, you should output <span class=\"tex-font-style-tt\">-1</span>.</p>","ru":"<p>У Славика есть массив длины $$$n$$$, состоящий только из нулей и единиц. За одну операцию он может удалить либо первый, либо последний элемент массива.</p><p>Какое минимальное число операций нужно совершить Славику, чтобы сумма оставшихся элементов в массиве равнялась в точности $$$s$$$ после совершения всех операций? В случае, если число $$$s$$$ не может быть получено как сумма элементов массива после любого числа операций, выведите «<span class=\"tex-font-style-tt\">-1</span>».</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)&nbsp;— the number of test cases.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$s$$$ ($$$1 \\leq n, s \\leq 2 \\cdot 10^5$$$)&nbsp;— the length of the array and the needed sum of elements.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_i$$$ ($$$0 \\leq a_i \\leq 1$$$)&nbsp;— the elements of the array.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Первая строка содержит единственное число $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$)&nbsp;— количество наборов входных данных.</p><p>Первая строка каждого набора содержит два числа $$$n$$$ и $$$s$$$ ($$$1 \\leq n, s \\leq 2 \\cdot 10^5$$$)&nbsp;— длина массива и необходимая сумма элементов.</p><p>Вторая строка каждого набора содержит $$$n$$$ целых чисел $$$a_i$$$ ($$$0 \\leq a_i \\leq 1$$$)&nbsp;— элементы массива.</p><p>Гарантируется что сумма $$$n$$$ по всем наборам данных не превышает $$$2 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output a single integer&nbsp;— the minimum amount of operations required to have the total sum of the array equal to $$$s$$$, or <span class=\"tex-font-style-tt\">-1</span> if obtaining an array with sum $$$s$$$ isn't possible.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите единственное число — минимальное количество операций, необходимое чтобы сумма всех элементов массива равнялась $$$s$$$. Выведите «<span class=\"tex-font-style-tt\">-1</span>», если получить массив с суммой элементов $$$s$$$ невозможно.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, the sum of the whole array is $$$1$$$ from the beginning, so we don't have to make any operations.</p><p>In the second test case, the sum of the array is $$$2$$$ and we want it to be equal to $$$1$$$, so we should remove the first element. The array turns into $$$[1, 0]$$$, which has a sum equal to $$$1$$$.</p><p>In the third test case, the sum of the array is $$$5$$$ and we need it to be $$$3$$$. We can obtain such a sum by removing the first two elements and the last element, doing a total of three operations. The array turns into $$$[0, 1, 1, 1, 0, 0]$$$, which has a sum equal to $$$3$$$.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе сумма элементов во всем массиве уже равна $$$1$$$, поэтому никаких операций больше не требуется.</p><p>Во втором наборе сумма элементов равна $$$2$$$, а нам нужна сумма $$$1$$$, поэтому мы можем удалить из массива первый элемент, после чего массив превратится в $$$[1, 0]$$$, сумма элементов которого будет равна $$$1$$$.</p><p>В третьем наборе сумма элементов массива изначально равна $$$5$$$, а нам нужна сумма $$$3$$$. Мы можем получить такую сумму удалив первые 2 элемента, после чего удалив последний элемент, сделав всего 3 операции. Массив станет $$$[0, 1, 1, 1, 0, 0]$$$, сумма элементов которого будет $$$3$$$.</p>"},"sampleTestcases":[{"id":1655363250181,"input":"7\n3 1\n1 0 0\n3 1\n1 1 0\n9 3\n0 1 0 1 1 1 0 0 1\n6 4\n1 1 1 1 1 1\n5 1\n0 0 1 1 0\n16 2\n1 1 0 0 1 0 0 1 1 0 0 0 0 0 1 1\n6 3\n1 0 1 0 0 0\n","output":"0\n1\n3\n2\n2\n7\n-1\n"}],"submitUrl":"https://codeforces.com/contest/1692/submit","language":"c++"}