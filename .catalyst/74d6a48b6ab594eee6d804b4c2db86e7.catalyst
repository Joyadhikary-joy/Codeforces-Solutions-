{"title":"A. Domino Disaster","contestId":"1567","problemIndex":"A","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>Alice has a grid with $$$2$$$ rows and $$$n$$$ columns. She fully covers the grid using $$$n$$$ dominoes of size $$$1 \\times 2$$$&#xA0;&#x2014; Alice may place them vertically or horizontally, and each cell should be covered by exactly one domino.</p><p>Now, she decided to show one row of the grid to Bob. Help Bob and figure out what the other row of the grid looks like!</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 5000$$$)&#xA0;&#x2014; the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains an integer $$$n$$$ ($$$1 \\leq n \\leq 100$$$)&#xA0;&#x2014; the width of the grid.</p><p>The second line of each test case contains a string $$$s$$$ consisting of $$$n$$$ characters, each of which is either <span class=\"tex-font-style-tt\">L</span>, <span class=\"tex-font-style-tt\">R</span>, <span class=\"tex-font-style-tt\">U</span>, or <span class=\"tex-font-style-tt\">D</span>, representing the left, right, top, or bottom half of a domino, respectively (see notes for better understanding). This string represents one of the rows of the grid. </p><p><span class=\"tex-font-style-bf\">Additional constraint on the input:</span> each input corresponds to at least one valid tiling.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, output one string&#xA0;&#x2014; the other row of the grid, using the same format as the input string. If there are multiple answers, print any.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case, Alice shows Bob the <span class=\"tex-font-style-it\">top</span> row, the whole grid may look like: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/74fd27dee13c8d73f41b62ff63fec2b1fe6b2ce2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>In the second test case, Alice shows Bob the <span class=\"tex-font-style-it\">bottom</span> row, the whole grid may look like: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/a9de3377acd81e9b5573b797681868590ce31db2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>In the third test case, Alice shows Bob the <span class=\"tex-font-style-it\">bottom</span> row, the whole grid may look like: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/6f3e66bec16f74f442ff67d2eb5ae41b794bc6be.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>In the fourth test case, Alice shows Bob the <span class=\"tex-font-style-it\">top</span> row, the whole grid may look like: </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/1f8f48c39f103d5d8faa2832085cf8d075705bff.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center>","sampleTestcases":[{"id":1630983288778,"input":"4\n1\nU\n2\nLR\n5\nLRDLR\n6\nUUUUUU","output":"D\nLR\nLRULR\nDDDDDD\n","result":{"id":1630983288778,"stdout":"D\r\nLR\r\nLRULR\r\nDDDDDD\r\n","stderr":"","exitcode":0,"signal":null,"time":39,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1567/submit","language":"c++"}