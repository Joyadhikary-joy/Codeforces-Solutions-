{"title":{"en":"B. Permutation Sort","ru":"B. Сортировка перестановки"},"contestId":"1525","problemIndex":"B","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given a permutation $$$a$$$ consisting of $$$n$$$ numbers $$$1$$$, $$$2$$$, ..., $$$n$$$ (a permutation is an array in which each element from $$$1$$$ to $$$n$$$ occurs exactly once).</p><p>You can perform the following operation: choose some subarray (contiguous subsegment) of $$$a$$$ and rearrange the elements in it in any way you want. But this operation cannot be applied to the whole array.</p><p>For example, if $$$a = [2, 1, 4, 5, 3]$$$ and we want to apply the operation to the subarray $$$a[2, 4]$$$ (the subarray containing all elements from the $$$2$$$-nd to the $$$4$$$-th), then after the operation, the array can become $$$a = [2, 5, 1, 4, 3]$$$ or, for example, $$$a = [2, 1, 5, 4, 3]$$$.</p><p>Your task is to calculate the minimum number of operations described above to sort the permutation $$$a$$$ in ascending order.</p>","ru":"<p>Вам дана перестановка $$$a$$$ состоящая из $$$n$$$ чисел $$$1$$$, $$$2$$$, ..., $$$n$$$ (перестановка — это массив, в котором каждый элемент от $$$1$$$ до $$$n$$$ встречается ровно один раз).</p><p>Вы можете выполнять операцию следующего вида&nbsp;— выбрать подмассив (непрерывный подотрезок) $$$a$$$ и переставить в нем элементы произвольным образом. Но такую операцию нельзя применить ко всему массиву целиком.</p><p>Например, $$$a = [2, 1, 4, 5, 3]$$$ и мы хотим применить операцию к подмассиву $$$a[2, 4]$$$ (подмассиву, содержащему все элементы от $$$2$$$-го до $$$4$$$-го), тогда после операции массив может иметь вид $$$a = [2, 5, 1, 4, 3]$$$, или, например, $$$a = [2, 1, 5, 4, 3]$$$.</p><p>Ваша задача&nbsp;— определить минимальное количество вышеописанных операций, позволяющих отсортировать перестановку $$$a$$$ в возрастающем порядке.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 2000$$$)&nbsp;— the number of test cases.</p><p>The first line of the test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 50$$$)&nbsp;— the number of elements in the permutation.</p><p>The second line of the test case contains $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$&nbsp;— the given permutation $$$a$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Первая строка содержит одно целое число $$$t$$$ ($$$1 \\le t \\le 2000$$$)&nbsp;— количество наборов входных данных. </p><p>Первая строка набора входных данных содержит одно целое число $$$n$$$ ($$$3 \\le n \\le 50$$$)&nbsp;— количество элементов в перестановке.</p><p>Вторая строка набора входных данных содержит $$$n$$$ различных целых чисел от $$$1$$$ до $$$n$$$&nbsp;— заданную перестановку $$$a$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output a single integer&nbsp;— the minimum number of operations described above to sort the array $$$a$$$ in ascending order.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора выходных данных выведите одно целое число&nbsp;— минимальное количество вышеописанных операций, позволяющих отсортировать перестановку $$$a$$$ по возрастанию.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the explanations, $$$a[i, j]$$$ defines the subarray of $$$a$$$ that starts from the $$$i$$$-th element and ends with the $$$j$$$-th element.</p><p>In the first test case of the example, you can select the subarray $$$a[2, 3]$$$ and swap the elements in it.</p><p>In the second test case of the example, the permutation is already sorted, so you don't need to apply any operations.</p><p>In the third test case of the example, you can select the subarray $$$a[3, 5]$$$ and reorder the elements in it so $$$a$$$ becomes $$$[2, 1, 3, 4, 5]$$$, and then select the subarray $$$a[1, 2]$$$ and swap the elements in it, so $$$a$$$ becomes $$$[1, 2, 3, 4, 5]$$$.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В объяснениях $$$a[i, j]$$$ означает подмассив $$$a$$$, который начинается с $$$i$$$-го элемента и заканчивается $$$j$$$-м элементом.</p><p>В первом наборе входных данных из условия можно выбрать подмассив $$$a[2, 3]$$$ и поменять в нем элементы местами.</p><p>Во втором наборе входных данных перестановка уже отсортирована, поэтому операции применять не нужно.</p><p>В третьем наборе входных данных можно выбрать подмассив $$$a[3, 5]$$$ и превратить $$$a$$$ в $$$[2, 1, 3, 4, 5]$$$, а затем выбрать подмассив $$$a[1, 2]$$$ и превратить $$$a$$$ в $$$[1, 2, 3, 4, 5]$$$.</p>"},"sampleTestcases":[{"id":1652587706827,"input":"3\n4\n1 3 2 4\n3\n1 2 3\n5\n2 1 4 5 3","output":"1\n0\n2\n","result":{"id":1652587706827,"stdout":"1\n0\n2\n","stderr":"","exitcode":0,"signal":null,"time":1,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}